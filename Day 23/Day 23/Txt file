        // code to refer back
		
		//Write your code here
        public static void levelOrder(Node root)
        {

            //use Queue data structure to traverse the binary tree and print the nodes
            Queue<Node> myQ = new Queue<Node>();
            //Node currNode;

            if (root == null)
            {
                return;
            }
            else
            {
                myQ.Enqueue(root);
            }

            // while queue is not empty and has at least one node in it
            while (myQ.Count > 0)
            {
                var nodeInFrontOfQueue = myQ.Peek();
                //Console.WriteLine(nodeInFrontOfQueue.GetType());
                Console.Write(nodeInFrontOfQueue.data + " ");
                //currNode = myQ.Dequeue();
                //Console.WriteLine("Visit current node and print its value: " + currNode.data);

                if (nodeInFrontOfQueue.left != null)
                {
                    myQ.Enqueue(nodeInFrontOfQueue.left);
                }
                if (nodeInFrontOfQueue.right != null)
                {
                    myQ.Enqueue(nodeInFrontOfQueue.right);
                }
                myQ.Dequeue();
                //Console.WriteLine("No of elements in the queue: {0}", myQ.Count);

            }
        }
